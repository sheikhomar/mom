class CheckInStation is subclass of Station

operations

public CheckInStation : StationID * seq of char ==> CheckInStation
CheckInStation(pId, pName) ==
  Station(pId, pName);


pure public CanProcess : () ==> bool
CanProcess() == return currentTote = nil
pre HasCorrectSegmentConfiguration(GetId(), segments);

public Process : Tote ==> ()
Process(pTote) == currentTote := pTote;

public Step : () ==> ()
Step() ==
  let segment in set segments
  in
    if currentTote <> nil and segment.CanProcess(currentTote)
    then (
      segment.Process(currentTote);
      currentTote := nil;
    );

functions

private HasCorrectSegmentConfiguration : StationID * set of Segment -> bool
HasCorrectSegmentConfiguration(pId, pSegments) ==
   card pSegments = 1 and
   exists segment in set pSegments & segment.GetSourceStation().GetId() = pId;

traces
-- TODO Define Combinatorial Test Traces here
end CheckInStation