class DestructionStation is subclass of Station

operations

public DestructionStation : StationID * seq of char ==> DestructionStation
DestructionStation(pId, pName) ==
  Station(pId, pName);

pure public CanProcess : () ==> bool
CanProcess() == return currentTote = nil
pre HasCorrectSegmentConfiguration(GetId(), segments);

public Process : Tote ==> ()
Process(pTote) == currentTote := pTote
pre pTote.GetBaggage() <> nil;

public Step : () ==> ()
Step() ==
  (
    if currentTote <> nil
    then
      let baggage = currentTote.Unload()
      in skip;
    currentTote := nil;
  );

functions

private HasCorrectSegmentConfiguration : StationID * set of Segment -> bool
HasCorrectSegmentConfiguration(pCurrentId, pSegments) ==
  card GetOutSegments(pCurrentId, pSegments) = 0 and
  card GetInSegments(pCurrentId, pSegments) > 0;

end DestructionStation