class Tote

instance variables

private id : nat;
private length : nat1;
private baggage : [Baggage] := nil;

operations

public Tote : nat * nat1 ==> Tote
Tote(pId, pLength) == ( id := pId; length := pLength; );

public pure GetId : () ==> nat
GetId() == return id;

public pure GetLength : () ==> nat1
GetLength() == return length;

public pure GetBaggage : () ==> [Baggage]
GetBaggage() == return baggage;

public Load : Baggage ==> ()
Load(pBaggage) ==
  baggage := pBaggage
pre baggage = nil;

public Unload : () ==> Baggage
Unload() ==
  let b = baggage
  in (
    baggage := nil;
    return b;
  )
pre baggage <> nil;

end Tote