class ScreeningL1StationTest is subclass of TestCase

instance variables

private screeningStation : [ScreeningL1Station] := nil;
private toDischarge : [Segment] := nil;
private toDestruction : [Segment] := nil;
private goodTote : [Tote] := nil;
private badTote : [Tote] := nil;
private someTote : [Tote] := nil;

operations

public setUp : () ==> ()
setUp() ==
  let
    checkin = new CheckInStation(mk_token(1), "CheckIn"),
    screening = new ScreeningL1Station(mk_token(2), "ScreeningLevel1"),
    destruction = new DestructionStation(mk_token(3), "Destroy"),
    discharge = new DischargeStation(mk_token(4), "Discharge"),
    goodBaggage = new Baggage(),
    badBaggage = new Baggage({<FailsSecurityL1>})
  in (
    goodTote := new Tote(1455, 10);
    goodTote.Insert(goodBaggage);
    badTote := new Tote(1456, 10);
    badTote.Insert(badBaggage);
    someTote := new Tote(1457, 10);
    screeningStation := screening;
    toDestruction := new Segment(screening, destruction, 25);
    toDischarge := new Segment(screening, discharge, 25);
  );

/*
 * Tests for CanProcess()
 */
public TestCanProcessWhenNothingIsBeingProcessing : () ==> ()
TestCanProcessWhenNothingIsBeingProcessing() ==
  (
    Assert`assertTrue(screeningStation.CanProcess());
  );

public TestCanProcessWhenToteIsProcessing : () ==> ()
TestCanProcessWhenToteIsProcessing() ==
  (
    screeningStation.Process(goodTote);
    Assert`assertFalse(screeningStation.CanProcess());
  );

/*
 * Tests for Step()
 */
public TestStepWhenNotProcessing : () ==> ()
TestStepWhenNotProcessing() ==
  (
    -- Nothing should happen
    screeningStation.Step();
    Assert`assertTrue(screeningStation.CanProcess());
  );

end ScreeningL1StationTest
