class Baggage is subclass of Global

types

public Attribute = <BadTag> | <FailsSecurityL1>;

instance variables

private attributes : set of Attribute;

operations

public Baggage : () ==> Baggage
Baggage() == attributes := {};

public Baggage : set1 of Attribute ==> Baggage
Baggage(pInitialAttributes) == 
  attributes := pInitialAttributes;

public SetAttr : Attribute ==> ()
SetAttr(pAttr) == 
  attributes := attributes union { pAttr }
pre not pAttr in set attributes;

pure public HasAttr : Attribute ==> bool
HasAttr(pAttr) ==
  return pAttr in set attributes;

public RemoveAttr : Attribute ==> ()
RemoveAttr(pAttr) ==
  attributes := attributes \ { pAttr }
pre pAttr in set attributes;

end Baggage