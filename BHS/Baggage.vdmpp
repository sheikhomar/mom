class Baggage is subclass of Global

instance variables

private annotations : set of BaggageAnnotation;
private destination : FlightDestination;

operations

public Baggage : FlightDestination ==> Baggage
Baggage(pDest) == 
  (
    annotations := {};
    destination := pDest;
  );

public Baggage : FlightDestination * set1 of BaggageAnnotation ==> Baggage
Baggage(pDest, pInitialannotations) == 
  (
    annotations := pInitialannotations;
    destination := pDest;
  );

public pure HasAnnotation : BaggageAnnotation ==> bool
HasAnnotation(pAnnot) ==
  return pAnnot in set annotations;

public RemoveAnnotation : BaggageAnnotation ==> ()
RemoveAnnotation(pAnnot) ==
  annotations := annotations \ { pAnnot }
pre pAnnot in set annotations
post pAnnot not in set annotations;

public pure GetDestination : () ==> FlightDestination
GetDestination() == return destination;

end Baggage
